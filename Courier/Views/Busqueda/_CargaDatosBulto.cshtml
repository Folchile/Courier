@model Courier.Models.BuscarOTModels
<script type="text/javascript">       
    function CargaHistorialBulto(OTP, OTD, IdBulto) {
        var randomnumber = Math.floor(Math.random() * 11) 
        $("#dialog-HistorialOT").dialog("open");
        $("#dialog-HistorialOT").html('<img src="@Url.Content("~/Images/8.gif")" />');
        $("#dialog-HistorialOT").load('@Url.Content("~/Preparacion/VerHistorialOT")?OTP=' + OTP + '&OTD=' + OTD + '&IdBulto=' + IdBulto + '&iOTP=0&iOTD=1&iBulto=1&r=' + randomnumber);
    }    
    $(function () {
        $("#tabs").tabs();
        $("#dialog-FinPrep").dialog({ autoOpen: false, title: "Resultado", width: 'auto', modal: true,
            buttons: {
                Aceptar: function () {
                    $(this).dialog("close");
                }
            }
        });        
        $("#dialog-cambio").dialog({ autoOpen: false, title: "Cambio de Estado", width: 'auto', modal: true,
            buttons: {
                Aceptar: function (event) {
                    event.preventDefault();
                    borrar_contenido();
                    $.validator.unobtrusive.parse("#frmCambiarEstado");
                    if ($("#frmCambiarEstado").valid() == true) {
                        //alert($("#frmCambiarEstado").valid());
                        $("#frmCambiarEstado").submit();
                        $(this).dialog("close");
                    }
                },
                Cancelar: function () {
                    $(this).dialog("close");
                }
            }
        });
    })
    function InicioCambiar() {
        waitingDialog({ title: "Guardando", message: "Guardando Formulario...<br/>" });
    }
    function FinCambiar(data) {
        closeWaitingDialog();
        if (data.Ok = true) {
            event.preventDefault();
            borrar_contenido();
            $.validator.unobtrusive.parse("#frmBuscar");
            if ($("#frmBuscar").valid() == true) {
                $("#frmBuscar").submit();
            }            
        }
        else {
            alert(data.Error);
        }
    }
    function FinErrorCambiar() {
        closeWaitingDialog();
        alert("No fue posible guardar la información");
    }
    function VerCambioEstado(Bulto) {
        waitingDialog({ title: "Buscando", message: "Buscando Formulario...<br/>" });
        $("#dialog-cambio").load('@Url.Action("FormCambiaEstadoBulto","Administracion")?Bulto=' + Bulto, function (response,status,xhr) {
            closeWaitingDialog();            
            if (status == "success") {
                $("#dialog-cambio").dialog("open");
                borrar_contenido();
            }
            else {
                alert("No fue posible cargar la información");
            }
        });
    }
    function VerCambioEstadoRoll(Bulto) {
        waitingDialog({ title: "Buscando", message: "Buscando Formulario...<br/>" });
        $("#dialog-cambio").load('@Url.Action("FormRollBack","Administracion")?Bulto=' + Bulto, function (response, status, xhr) {
            closeWaitingDialog();
            if (status == "success") {
                $("#dialog-cambio").dialog("open");
                borrar_contenido();
            }
            else {
                alert("No fue posible cargar la información");
            }
        });
    }

    function CargaInformacionOTD(OTP, OTD) {
        var randomnumber = Math.floor(Math.random() * 11111111);
        waitingDialog({ title: "Cargando Datos", message: "Buscando datos OT...<br/>" });
        $("#otdContent").load('@Url.Action("DatosOTD","Generico")?OTP=' + OTP + '&OTD=' + OTD + "&r=" + randomnumber, function (response, status, xhr) {
            closeWaitingDialog();
            if (status != "success") {                            
                alert("No fue posible cargar la información");
            }
        });
    }

    var direccion = '@Model.Direccion';
    var latitud = '@Model.Latitud'.replace(',', '.');
    var longitud = '@Model.Longitud'.replace(',', '.');

    var map,
        markers = [],
        data = [
            {
                id: 1,
                plaats: direccion,
                geo: latitud + ',' + longitud
            }
        ];

    function llamarMapa(numero) {
        var miNumero = numero;
        setTimeout('initMap();', 200);
    }

    // Initialise Google Map
    function initMap() {

        if (latitud != null && latitud != "") {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: parseFloat(latitud), lng: parseFloat(longitud) },
                zoom: 16,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            var bounds = new google.maps.LatLngBounds();

            if ($(this).attr('href') == '#tabs-5') {
                var center = map.getCenter();
                google.maps.event.trigger(map, 'resize');
                map.setCenter(center);
            }

            // Uses the DROP animation to drop them one after the other
            function createMarker(dataitem, timeout) {
                window.setTimeout(function () {
                    var l = dataitem.geo.split(',');
                    var latlng = new google.maps.LatLng(parseFloat(l[0]), parseFloat(l[1]));
                    var marker = new google.maps.Marker({
                        position: latlng,
                        map: map,
                        animation: google.maps.Animation.DROP,
                        id: dataitem.id
                    });
                    markers.push(marker);
                }, timeout);
            }

            // Limit the visible area to just the markers that we have
            for (var i = 0; i < data.length; i++) {
                var l = data[i].geo.split(',');
                bounds.extend(new google.maps.LatLng(parseFloat(l[0]), parseFloat(l[1])));
            }
            map.fitBounds(bounds);

            // Drop the markers onto the map
            for (var i = 0; i < data.length; i++) {
                createMarker(data[i], i * 100);
            }
        } else {
            $('#map').hide();
        }
       
    }


</script>

<link href="@Url.Content("~/Content/GridView.css")" rel="stylesheet" type="text/css" />

<div id="dialog-cambio"></div>
<div id="dialog-FinPrep"></div>

<div id="dialog-Anular"></div>
<input type="hidden" id="OTP" name="OTP" value="@Model.DatosAnular.PK_FOL_OTP_ID" />
<input type="hidden" id="OTD" name="OTD" value="@Model.DatosAnular.PK_FOL_OTD_ID" />

<div id="tabs">
    <ul>		    
        <li><a href="#tabs-1">Datos del Pedido</a></li>	
        @if (Model.ListaEntrega.Count() > 0)
        {
            <li><a href="#tabs-2">Datos Entrega</a></li>	    
        }
        @if (Model.ListaDevolucion.Count() > 0)
        {
            <li><a href="#tabs-3">Datos Devolución</a></li>	    
        }
        @if (Model.ObservacionProducto!="" && Model.ObservacionProducto!=null)
        {
            <li><a href="#tabs-4">Datos Adicionales</a></li>	    
        }
         <li><a href="#tabs-5" onclick="llamarMapa(1);">Ver Mapa</a></li>
    </ul>        
    
    <div id="tabs-1">  
        
        <div id="otdContent"></div>


        @{
            var grid = new WebGrid(Model.ListaBultos, rowsPerPage: 9, ajaxUpdateContainerId: "myGrid");    
        }         
        <div  id="myGrid" style="min-width:600px;">
        <div>
            @grid.GetHtml(
            fillEmptyRows: true,
            alternatingRowStyle: "fila-alternativa",
            headerStyle: "encabezado-grid",
            tableStyle: "mGrid",
            footerStyle: "pie-grid",
            mode: WebGridPagerModes.All,
            firstText: "<< Primera",
            previousText: "< Anterior",
            nextText: "Siguiente >",
            lastText: "Última >>",
            columns: new[]
            {                
                    
                grid.Column("PK_FOL_BLT_ID","Cod.Bulto",@<text>
                <label>B</label>@item.PK_FOL_BLT_ID
                </text>),     
                grid.Column("FL_FOL_EST_NOMBRE","Estado"), 
                grid.Column("FL_FOL_EST_DESCRIPCION","Descripción"), 
                grid.Column("SUC_ACTUAL","Suc.Actual"),    
                grid.Column("FL_FOL_BLT_LARGO","Largo(CM)",format:@<text>
                <div style="float:right">
                    @if (item.FL_FOL_BLT_LARGO != null)
                    {
                    @String.Format("{0:0.000}", item.FL_FOL_BLT_LARGO)
                    }
                </div>
                </text>),
                grid.Column("FL_FOL_BLT_ALTO","Alto(CM)",format:@<text>
                <div style="float:right">    
                @if (item.FL_FOL_BLT_ALTO != null)
                    {            
                @String.Format("{0:0.000}", item.FL_FOL_BLT_ALTO)
                    }
                </div>
                </text>),
                grid.Column("FL_FOL_BLT_ANCHO","Ancho(CM)",format:@<text>
                <div style="float:right">
                @if (item.FL_FOL_BLT_ANCHO != null)
                    {
                    @String.Format("{0:0.000}", item.FL_FOL_BLT_ANCHO)
                    }
                </div>
                </text>),
                grid.Column("FL_FOL_BLT_PESO","Peso(KG)",format:@<text>
                <div style="float:right">
                @if (item.FL_FOL_BLT_PESO != null)
                    {
                    @String.Format("{0:0.000}", item.FL_FOL_BLT_PESO)
                    }
                </div>
                </text>),
                grid.Column("FL_FOL_BLT_PESO_VOLUMETRICO","PesoVol.",format:@<text>
                <div style="float:right">
                @if (item.FL_FOL_BLT_PESO_VOLUMETRICO != null)
                    {
                    @String.Format("{0:0.000}", item.FL_FOL_BLT_PESO_VOLUMETRICO)
                    }
                </div>
                </text>)                          
            })
        </div>
    </div>
    </div>
     @if (Model.ListaEntrega.Count() >0)
     {         
        <div id="tabs-2">  
        <div  id="myGridEntrega" style="min-width:600px;">                    
            @{
                var gridEntrega = new WebGrid(Model.ListaEntrega, rowsPerPage: 10, ajaxUpdateContainerId: "myGridEntrega");    
            }
            @gridEntrega.GetHtml(
            fillEmptyRows: true,
            alternatingRowStyle: "fila-alternativa",
            headerStyle: "encabezado-grid",
            tableStyle: "mGrid",
            footerStyle: "pie-grid",
            mode: WebGridPagerModes.All,
            firstText: "<< Primera",
            previousText: "< Anterior",
            nextText: "Siguiente >",
            lastText: "Última >>",
            columns: new[]
            {                
                    
                grid.Column("Fecha","Fecha"),  
                grid.Column("Visita","Visita"),
                grid.Column("Recibe","Recibe"), 
                grid.Column("Rut","Rut"),
                grid.Column("Estado","Estado"),
                grid.Column("Observacion","Observación")
            })
            
        </div>
        </div>
     }
     @if (Model.ListaDevolucion.Count() >0)
     {         
        <div id="tabs-3">  
        <div  id="myGridDevolucion" style="min-width:600px;">                    
            @{
         var gridEntrega = new WebGrid(Model.ListaDevolucion, rowsPerPage: 10, ajaxUpdateContainerId: "myGridDevolucion");    
            }
            @gridEntrega.GetHtml(
            fillEmptyRows: true,
            alternatingRowStyle: "fila-alternativa",
            headerStyle: "encabezado-grid",
            tableStyle: "mGrid",
            footerStyle: "pie-grid",
            mode: WebGridPagerModes.All,
            firstText: "<< Primera",
            previousText: "< Anterior",
            nextText: "Siguiente >",
            lastText: "Última >>",
            columns: new[]
            {                
                    
                grid.Column("Fecha","Fecha"),  
                grid.Column("Visita","Visita"),
                grid.Column("Recibe","Recibe"), 
                grid.Column("Rut","Rut"),
                grid.Column("Estado","Estado"),
                grid.Column("Observacion","Observación")
            })
            
        </div>
        </div>
     }
     @if (Model.ObservacionProducto!="" && Model.ObservacionProducto!=null)
     {         
        <div id="tabs-4">  
            <div style="margin:10px;">@Model.ObservacionProducto</div>
        </div>
     }
     
     <div id="tabs-5">  
        <@*table style="margin:10px; width:100%">
            <tr>
                <td>OT: @Model.OTP-@Model.OTD</td>
                <td>Latitud: @Model.Latitud</td>
                <td>Longitud: @Model.Longitud</td>
                <td>Dirección: @Model.Direccion</td>
            </tr>
        </table>*@
        @if (Model.ListaEntrega.Count() >0)
         {         
            <div  id="myGridMap" style="min-width:600px;">                    
                @{
             var gridEntregaMapa = new WebGrid(Model.ListaEntrega, rowsPerPage: 5, ajaxUpdateContainerId: "myGridMap");    
                }
                @gridEntregaMapa.GetHtml(
                fillEmptyRows: true,
                alternatingRowStyle: "fila-alternativa",
                headerStyle: "encabezado-grid",
                tableStyle: "mGrid",
                footerStyle: "pie-grid",
                mode: WebGridPagerModes.All,
                firstText: "<< Primera",
                previousText: "< Anterior",
                nextText: "Siguiente >",
                lastText: "Última >>",
                columns: new[]
                {                
                    
                    gridEntregaMapa.Column("Fecha","Fecha"),  
                    gridEntregaMapa.Column("Visita","Visita"),
                    //gridEntregaMapa.Column("Recibe","Recibe"), 
                    //gridEntregaMapa.Column("Rut","Rut"),
                    gridEntregaMapa.Column("Estado","Estado"),
                    //gridEntregaMapa.Column("Observacion","Observación"),
                    gridEntregaMapa.Column("Latitud","Latitud"),
                    gridEntregaMapa.Column("Longitud","Longitud")
                })
            </div>
         }


        <div style="margin:10px; text-align:center; width:100%">
            <div id="map" style="width: 600px; height: 400px; margin:auto; border-style:groove"></div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        CargaInformacionOTD($("#OTP").val(), $("#OTD").val());
    })
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCeQqXugLycKThib7eg7oSXxGvAZgA_1Cw&callback=initMap" async defer></script>